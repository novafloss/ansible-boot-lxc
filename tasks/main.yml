---
- name: Start container
  lxc_container:
    name: '{{ item.split(".")[0] }}'
    template: '{{ hostvars[item].get("lxc_template", "debian") }}'
    state: started
    template_options: '{{ hostvars[item].get("lxc_template_options", "") }}'
    container_config: '{{ hostvars[item].get("lxc_container_config", []) }}'
    lxc_path: '{{ hostvars[item].get("lxc_path", lxc_path) }}'
    container_log: true
    container_log_level: DEBUG
  when: item.split('.')[-1] == 'lxc'
  with_items: '{{ groups["all"] }}'

- name: Setup SSH for LXC
  add_host:
    name: '{{ item }}'
    ansible_ssh_common_args: '{{ lxc_ssh_common_args }}'
    ansible_user: root
  when: item.split('.')[-1] == 'lxc'
  with_items: '{{ groups["all"] }}'
  changed_when: False

- name: Add your ssh key to the container
  authorized_key:
    key: '{{ lookup("file", ssh_public_key ) }}'
    path: '{{ lxc_path }}/{{ item.split(".")[0] }}/rootfs/root/.ssh/authorized_keys'
    user: root
  when: item.split('.')[-1] == 'lxc'
  with_items: '{{ groups["all"] }}'

- name: Wait for containers to start sshd
  wait_for:
    host: '{{ item }}'
    port: 22
    search_regex: OpenSSH
  when: item.split('.')[-1] == 'lxc'
  with_items: '{{ groups["all"] }}'

- name: Check python availability
  raw: hash python2
  become: no
  delegate_to: '{{ host }}'
  when: host.split('.')[-1] == 'lxc'
  with_items: '{{ groups["all"] }}'
  loop_control:
    loop_var: host
  ignore_errors: True
  changed_when: False
  register: python_available

- name: Install python in container
  raw: apt-get update -y && apt-get install -y python
  become: no
  delegate_to: '{{ item.host }}'
  when: item is failed
  with_items: '{{ python_available.results }}'
  register: out
  until: out|succeeded
  retries: 30

- name: Install sudo in container
  apt:
    name: sudo
    update_cache: yes
  become: no
  delegate_to: '{{ item }}'
  when: item.split('.')[-1] == 'lxc'
  with_items: '{{ groups["all"] }}'
  register: out
  until: out|succeeded
  retries: 30
